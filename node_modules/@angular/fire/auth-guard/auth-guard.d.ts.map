{"version":3,"file":"auth-guard.d.ts","sources":["auth-guard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { NgZone } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, UnaryFunction } from 'rxjs';\r\nimport { User } from 'firebase/app';\r\nimport { FirebaseOptions, FirebaseAppConfig } from '@angular/fire';\r\nexport declare type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\r\nexport declare type AuthPipe = UnaryFunction<Observable<User | null>, Observable<boolean | any[]>>;\r\nexport declare const loggedIn: AuthPipe;\r\nexport declare class AngularFireAuthGuard implements CanActivate {\r\n    private router;\r\n    authState: Observable<User | null>;\r\n    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, zone: NgZone, router: Router);\r\n    canActivate: (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => Observable<boolean | import(\"@angular/router\").UrlTree>;\r\n}\r\nexport declare const canActivate: (pipe: AuthPipeGenerator) => {\r\n    canActivate: (typeof AngularFireAuthGuard)[];\r\n    data: {\r\n        authGuardPipe: AuthPipeGenerator;\r\n    };\r\n};\r\nexport declare const isNotAnonymous: AuthPipe;\r\nexport declare const idTokenResult: import(\"rxjs\").OperatorFunction<User, any>;\r\nexport declare const emailVerified: AuthPipe;\r\nexport declare const customClaims: UnaryFunction<Observable<User>, Observable<any>>;\r\nexport declare const hasCustomClaim: (claim: string) => AuthPipe;\r\nexport declare const redirectUnauthorizedTo: (redirect: any[]) => AuthPipe;\r\nexport declare const redirectLoggedInTo: (redirect: any[]) => AuthPipe;\r\n"]}