{"version":3,"file":"firebase.app.module.d.ts","sources":["firebase.app.module.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;;;;;;mCAM1F;AACL;;;AACA","sourcesContent":["import { InjectionToken, NgZone, Version } from '@angular/core';\r\nimport { analytics, app, auth, database, firestore, functions, messaging, performance, remoteConfig, storage } from 'firebase/app';\r\nexport interface FirebaseOptions {\r\n    [key: string]: any;\r\n}\r\nexport interface FirebaseAppConfig {\r\n    [key: string]: any;\r\n}\r\nexport declare const FIREBASE_OPTIONS: InjectionToken<FirebaseOptions>;\r\nexport declare const FIREBASE_APP_NAME: InjectionToken<string | FirebaseAppConfig>;\r\nexport declare class FirebaseApp implements Partial<app.App> {\r\n    name: string;\r\n    options: {};\r\n    analytics: () => analytics.Analytics;\r\n    auth: () => auth.Auth;\r\n    database: (databaseURL?: string) => database.Database;\r\n    messaging: () => messaging.Messaging;\r\n    performance: () => performance.Performance;\r\n    storage: (storageBucket?: string) => storage.Storage;\r\n    delete: () => Promise<void>;\r\n    firestore: () => firestore.Firestore;\r\n    functions: (region?: string) => functions.Functions;\r\n    remoteConfig: () => remoteConfig.RemoteConfig;\r\n}\r\nexport declare const VERSION: Version;\r\nexport declare function ÉµfirebaseAppFactory(options: FirebaseOptions, zone: NgZone, nameOrConfig?: string | FirebaseAppConfig | null): FirebaseApp;\r\nexport declare class AngularFireModule {\r\n    static initializeApp(options: FirebaseOptions, nameOrConfig?: string | FirebaseAppConfig): {\r\n        ngModule: typeof AngularFireModule;\r\n        providers: {\r\n            provide: InjectionToken<string | FirebaseAppConfig>;\r\n            useValue: string | FirebaseAppConfig;\r\n        }[];\r\n    };\r\n    constructor(platformId: Object);\r\n}\r\n"]}